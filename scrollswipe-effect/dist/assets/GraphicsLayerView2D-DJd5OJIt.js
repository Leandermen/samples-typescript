import{D as p,E as g,V as m,q as n,e as a,n as o,y as l,o as c}from"./index-DQMEynLp.js";import{t as d}from"./highlightReasons-B_7v1-X0.js";import{m as u,u as w}from"./LayerView-CME3g9rP.js";import{t as y}from"./GraphicContainer-BgpKA_L-.js";import{$ as V}from"./GraphicsView2D-D3f24g1o.js";import{t as f}from"./HighlightCounter-DAY50mUG.js";import"./scaleUtils-mW4pzHbQ.js";import"./Container-CeOHXViL.js";import"./definitions-C14Q9bsB.js";import"./enums-CYMvjYBC.js";import"./Texture-BEEDZAWo.js";import"./AGraphicContainer-BsTauZ4g.js";import"./TechniqueInstance-CUXJ-2oE.js";import"./UpdateTracking2D-DxaNkYtL.js";import"./TurboLine-C_2jme3n.js";import"./enums-BRqP_wXA.js";import"./earcut-CfUdRu7w.js";import"./GeometryUtils-XOKofNyW.js";import"./OptimizedGeometry-CQuTPb9g.js";import"./Rect-CUzevAry.js";import"./LabelMetric-Db0YPptB.js";import"./Program-CSwkdi1j.js";import"./VertexElementDescriptor-BOD-G50G.js";import"./BindType-BmZEZMMh.js";import"./Util-DkCS8-vN.js";import"./constants-D5zmR9t2.js";import"./TileContainer-DD7ZIzm0.js";import"./WGLContainer-Czs1tlQw.js";import"./ProgramTemplate-C_hzV7x7.js";import"./StyleDefinition-pu9RBNlY.js";import"./config-MDUrh2eL.js";import"./featureConversionUtils-mCO6_gJ8.js";import"./OptimizedFeatureSet-Blu9Ckm7.js";import"./FeatureCommandQueue-Cr2VcYgR.js";import"./vec3f32-nZdmKIgz.js";import"./AttributeStore-eLB0_y9s.js";import"./TimeOnly-CKki0_dt.js";import"./timeSupport-BrBf9Irm.js";import"./json-Wa8cmqdu.js";import"./normalizeUtilsSync-DxDzidWa.js";let s=class extends u(w){constructor(){super(...arguments),this._highlightCounter=new f}attach(){this.graphicsView=new V({requestUpdateCallback:()=>this.requestUpdate(),view:this.view,graphics:this.layer.graphics,container:new y(this.view.featuresTilingScheme),layerId:this.layer.id}),this.container.addChild(this.graphicsView.container),this.addAttachHandles(this.layer.on("graphic-update",this.graphicsView.graphicUpdateHandler)),this._updateHighlight()}detach(){this.container.removeAllChildren(),this.graphicsView=p(this.graphicsView)}async hitTest(i){return this.graphicsView?this.graphicsView.hitTest(i).map(t=>({type:"graphic",graphic:t,mapPoint:i,layer:this.layer})):null}queryGraphics(){return Promise.resolve(this.graphicsView.graphics)}update(i){this.graphicsView.processUpdate(i)}moveStart(){}viewChange(){this.graphicsView.viewChange()}moveEnd(){}isUpdating(){return!this.graphicsView||this.graphicsView.updating}highlight(i,t="highlight"){let r;typeof i=="number"?r=[i]:i instanceof g?r=[i.uid]:Array.isArray(i)&&i.length>0?r=typeof i[0]=="number"?i:i.map(h=>h&&h.uid):m.isCollection(i)&&i.length>0&&(r=i.map(h=>h&&h.uid).toArray());const e=r==null?void 0:r.filter(n);return e!=null&&e.length?(this._addHighlight(e,t),a(()=>this._removeHighlight(e,t))):a()}_addHighlight(i,t){this._highlightCounter.addReason(i,t),this._updateHighlight()}_removeHighlight(i,t){this._highlightCounter.deleteReason(i,t),this._updateHighlight()}_updateHighlight(){var t;const i=[];for(const r of this._highlightCounter.ids()){const e=this._highlightCounter.getHighestReason(r),h=d(e);i.push({objectId:r,highlightFlags:h})}(t=this.graphicsView)==null||t.setHighlight(i)}};o([l()],s.prototype,"graphicsView",void 0),s=o([c("esri.views.2d.layers.GraphicsLayerView2D")],s);const ai=s;export{ai as default};
